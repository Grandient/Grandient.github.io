[{"C:\\Users\\Gavin\\Downloads\\Projects\\personal-website\\src\\index.tsx":"1","C:\\Users\\Gavin\\Downloads\\Projects\\personal-website\\src\\features\\counter\\Counter.tsx":"2","C:\\Users\\Gavin\\Downloads\\Projects\\personal-website\\src\\App.tsx":"3","C:\\Users\\Gavin\\Downloads\\Projects\\personal-website\\src\\features\\counter\\counterSlice.ts":"4","C:\\Users\\Gavin\\Downloads\\Projects\\personal-website\\src\\serviceWorker.ts":"5","C:\\Users\\Gavin\\Downloads\\Projects\\personal-website\\src\\app\\store.ts":"6"},{"size":625,"mtime":1610600238980,"results":"7","hashOfConfig":"8"},{"size":1626,"mtime":1610596046155,"results":"9","hashOfConfig":"8"},{"size":5066,"mtime":1610928154823,"results":"10","hashOfConfig":"8"},{"size":1851,"mtime":1610596046155,"results":"11","hashOfConfig":"8"},{"size":5424,"mtime":1610596046155,"results":"12","hashOfConfig":"8"},{"size":414,"mtime":1610596046155,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18cru0c",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Gavin\\Downloads\\Projects\\personal-website\\src\\index.tsx",[],"C:\\Users\\Gavin\\Downloads\\Projects\\personal-website\\src\\features\\counter\\Counter.tsx",[],"C:\\Users\\Gavin\\Downloads\\Projects\\personal-website\\src\\App.tsx",["27","28","29","30"],"import React, { useState, useEffect } from 'react';\r\nimport {FaGithub, FaLinkedin, FaStackOverflow, FaEnvelope, FaFilePdf, FaCode, FaFileVideo} from 'react-icons/fa';\r\n\r\n// Techonlogy\r\nimport react from './app/React.png';\r\nimport mongodb from './app/Mongodb.png';\r\nimport prometheus from './app/Prometheus.png';\r\nimport grafana from './app/Grafana.jpg';\r\nimport redux from './app/Redux.svg';\r\n\r\n// Experience \r\nimport ontariotech from './app/OntarioTech.png';\r\nimport ESL from './app/ESL.jpg';\r\nimport flitex from './app/Flitex.png';\r\n\r\n// Projects\r\nimport passchecker from './app/Passcheckerlogo.png'\r\nimport repositoryviewr from './app/repositoryviewrlogo.png'\r\n\r\nimport './App.css';\r\n\r\nlet projects = [\r\n  {name: \"PassChecker\", path: passchecker},\r\n  {name: \"RepositoryViewr\", path: repositoryviewr},\r\n]\r\n\r\nlet experience = [\r\n  {name: \"ESL\", path: ESL},\r\n  {name: \"Ontario Tech\", path:ontariotech},\r\n  {name: \"FliteX\", path: flitex}\r\n]\r\n\r\nlet technology = [\r\n  {name: \"React\", path: react},\r\n  {name: \"MongoDB\", path: mongodb},\r\n  {name: \"Prometheus\", path: prometheus},\r\n  {name: \"Grafana\", path:grafana},\r\n  {name: \"Redux\", path:redux}\r\n]\r\n\r\nfunction App() {\r\n  const hours = new Date().getHours()\r\n  const isMorning = hours > 5 && hours < 12\r\n  const isEvening = hours < 5 && hours > 19;\r\n  const isAfternoon = hours > 12 && hours < 19;\r\n  return (\r\n    <div className={'night app'}>\r\n      <div className=\"app-stars\"></div>\r\n      <div className=\"app-nova\"></div>\r\n      <Header afternoon={isAfternoon} morning={isMorning} evening={isEvening}/>\r\n      <MainContainer/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Header(props:any){\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"item-name\">Gavin Gosling's Website</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Footer(){\r\n  return (\r\n    <div className=\"footer\">\r\n        <nav className=\"icon-container\">\r\n            <a className=\"icon\" aria-label=\"Linkedin\" href=\"https://www.linkedin.com/in/gavin-gosling-cs/\" target=\"_blank\" data-hint=\"LinkedIn\" rel=\"noreferrer\">\r\n              <FaLinkedin size={40}/>\r\n            </a>\r\n            <a className=\"icon\" aria-label=\"Github\" href=\"https://github.com/Grandient\" target=\"_blank\" data-hint=\"Github\" rel=\"noreferrer\">\r\n              <FaGithub size={40}/>\r\n            </a>\r\n            <a className=\"icon\" aria-label=\"E-mail\" href=\"mailto:gavin.gosling1@gmail.com\" target=\"_blank\" data-hint=\"E-mail\" rel=\"noreferrer\">\r\n              <FaEnvelope size={40}/>\r\n            </a>\r\n            <a className=\"icon\" aria-label=\"Stack Overflow\" href=\"https://stackoverflow.com/users/12733306/\" target=\"_blank\" data-hint=\"Stack Overflow\" rel=\"noreferrer\">\r\n              <FaStackOverflow size={40}/>\r\n            </a>\r\n            <a className=\"icon\" aria-label=\"CV\" href=\"./data/Gavin_Gosling_Resume.pdf\" data-hint=\"PDF\" rel=\"noreferrer\">\r\n              <FaFilePdf size={40}/>\r\n            </a>\r\n          </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction MainContainer(){\r\n  const [click, setClick] = useState(\"Projects\")\r\n\r\n  return (\r\n    <div className=\"main-container\"> \r\n      <div className=\"main-options\">\r\n        <div onClick={() => setClick(\"Projects\")} className={click === \"Projects\" ? \"container-option selected\" : \"container-option\"}>Projects</div>\r\n        <div onClick={() => setClick(\"Experience\")} className={click === \"Experience\" ? \"container-option selected\" : \"container-option\"}>Experience</div>\r\n        <div onClick={() =>  setClick(\"Technology\")} className={click === \"Technology\" ? \"container-option selected\" : \"container-option\"}>Technology</div>\r\n      </div>\r\n      <div className=\"sub-container\">\r\n        {click === \"Projects\" ? <ContainerOption options={projects}/> : null}\r\n        {click === \"Experience\" ? <ContainerOption options={experience}/> : null}\r\n        {click === \"Technology\" ? <ContainerOption options={technology}/> : null}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nfunction ContainerOption(props: any){\r\n  const [click, setClick] = useState(props.options[0].name)\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sub-options\">\r\n        {props.options.map((option: {name: string, path: string}) => {\r\n          return <div onClick={() => setClick(option.name)} className={click === option.name ? \"subcontainer-option selected\" : \"subcontainer-option\"}><img src={option.path} className={click === option.name ? \"subcontainer-image selected\" : \"subcontainer-image\"}/></div>\r\n        })}\r\n      </div>\r\n      <div className=\"item-container\">\r\n        {props.options.map((option: {name: string, path: string}) => {\r\n          return <div>{click === option.name ? <ItemContainer item={option}/> : null}</div>\r\n        })}\r\n      </div>\r\n   </div>\r\n  )\r\n}\r\n\r\nfunction ItemContainer(props: any){\r\n  return (\r\n  <div>\r\n    <div className=\"flex-row\">\r\n      <div className=\"item-name\">Name: </div>\r\n      <div>{props.item.name}</div>\r\n    </div>\r\n    <div className=\"flex-row\">\r\n      <div className=\"item-name\">Description: </div>\r\n      <div>{props.item.name}</div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\Gavin\\Downloads\\Projects\\personal-website\\src\\features\\counter\\counterSlice.ts",[],"C:\\Users\\Gavin\\Downloads\\Projects\\personal-website\\src\\serviceWorker.ts",[],"C:\\Users\\Gavin\\Downloads\\Projects\\personal-website\\src\\app\\store.ts",[],{"ruleId":"31","severity":1,"message":"32","line":1,"column":27,"nodeType":"33","messageId":"34","endLine":1,"endColumn":36},{"ruleId":"31","severity":1,"message":"35","line":2,"column":71,"nodeType":"33","messageId":"34","endLine":2,"endColumn":77},{"ruleId":"31","severity":1,"message":"36","line":2,"column":79,"nodeType":"33","messageId":"34","endLine":2,"endColumn":90},{"ruleId":"37","severity":1,"message":"38","line":116,"column":152,"nodeType":"39","endLine":116,"endColumn":265},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'FaCode' is defined but never used.","'FaFileVideo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]